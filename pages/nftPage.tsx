'use strict'

import Head from 'next/head'
import { NextPage } from 'next'
import styles from '../styles/Home.module.css'
import { mintNft, transferNFT } from '../service/index'
import { Web3Button } from '../components'
import React, { MouseEventHandler, useEffect, useState } from 'react'
import { useWeb3Context } from '../context'

interface transferNft {
	toAddress?: string | undefined
	id?: number | undefined
}

const NftPage: NextPage = function () {
	const web3 = useWeb3Context()
	const [mintTxHash, setMintTxHash] = useState<string>()
	const [tokenId, setTokenId] = useState<number>()
	const [formBody, setFormBody] = useState<transferNft>()
	const [transferTxHash, setTransferTxHash] = useState<string>()


	async function mintFunction(event: React.MouseEvent) {
		event.preventDefault()
		const { hash, tokenId } = await mintNft(web3.web3Provider)
		setMintTxHash(hash)
		setTokenId(tokenId)
	}

	async function transferNft(event: React.FormEvent<HTMLFormElement>) {
		event.preventDefault()
		const txHash = await transferNFT(web3.web3Provider, formBody?.toAddress, formBody?.id)
		setTransferTxHash(txHash)
	}

	function handleFormChange(event: React.FormEvent<HTMLInputElement>) {
		setFormBody({
			...formBody,
			[event.currentTarget.id]: event.currentTarget.value
		})
	}

	return (
		<div className={styles.container}>
			<Head>
				<title>Connect to the wallet</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className={styles.main}>
				<h1 className={styles.title}>
					NFT Demo
				</h1>
				<h2>
					To move further you must be connected to the Ropsten Ethereum test network and have funds in the account.
				</h2>
				{web3.network?.chainId === 5 ? (<h3 className={styles.code}>
					Connected
				</h3>) : (<h3 className={styles.code}>
					Not Connected
				</h3>)}
				{mintTxHash ? (
					<h3>Transaction Hash: {mintTxHash}; NFT ID: {tokenId}</h3>
				) : (<h3></h3>)}


				{transferTxHash ? (
					<h4>Transfer NFT Transaction Hash {transferTxHash}</h4>
				) : (<h4></h4>)}


				<div className={styles.grid}>
					{!web3.web3Provider ? (
						<Web3Button />
					) : (<h3 />)}
					<div className={styles.card}>
						<button onClick={mintFunction}>
							<h2>Mint NFT To your address</h2>
						</button>
					</div>

					<form className={styles.card} onSubmit={transferNft}>
						<div>
							<label>To Address</label>
							<input type='text' id='toAddress' onChange={handleFormChange} required></input>
						</div>
						<div>
							<label>NFT ID</label>
							<input type='number' id='id' onChange={handleFormChange} required></input>
						</div>
						<button
							className='Form_button'
							disabled={formBody === undefined ? true : false}
							type='submit'
						>
							Transfer
						</button>
					</form>

					<button className={styles.card}>
						<a href="https://github.com/vercel/next.js/tree/canary/examples">
							<h2>Examples &rarr;</h2>
							<p>Discover and deploy boilerplate example Next.js projects.</p>
						</a>
					</button>
					<button className={styles.card}>
						<a href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app">
							<h2>Deploy &rarr;</h2>
							<p>
								Instantly deploy your Next.js site to a public URL with Vercel.
							</p>
						</a>
					</button>
				</div>
			</main >
		</div >
	)
}

export default NftPage